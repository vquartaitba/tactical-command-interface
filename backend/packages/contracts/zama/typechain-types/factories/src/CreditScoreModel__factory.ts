/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CreditScoreModel,
  CreditScoreModelInterface,
} from "../../src/CreditScoreModel";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBaseScore",
        type: "uint256",
      },
    ],
    name: "BaseScoreUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "euint32",
        name: "encryptedScore",
        type: "uint256",
      },
    ],
    name: "ComputationCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fintech",
        type: "address",
      },
    ],
    name: "ComputationRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ModelParametersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "baseCreditScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completedRequests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_encryptedUserData",
        type: "bytes",
      },
    ],
    name: "executeComputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fintechRequests",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
    ],
    name: "getComputationRequest",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCompleted",
        type: "bool",
      },
      {
        internalType: "euint32",
        name: "encryptedScore",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "validUntil",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractStats",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalRequests",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_completedRequests",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseCreditScore",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
    ],
    name: "getEncryptedScore",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fintechAddress",
        type: "address",
      },
    ],
    name: "getFintechRequests",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getModelParameters",
    outputs: [
      {
        internalType: "euint32",
        name: "baseScore",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "riskMultiplier",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "creditLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "lastUpdated",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserRequests",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
    ],
    name: "isRequestValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "modelParams",
    outputs: [
      {
        internalType: "euint32",
        name: "baseScore",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "riskMultiplier",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "creditLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "lastUpdated",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_dataHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_validUntil",
        type: "uint256",
      },
    ],
    name: "requestComputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCompleted",
        type: "bool",
      },
      {
        internalType: "euint32",
        name: "encryptedScore",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "validUntil",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "requestedBy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setModelActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRequests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_baseScore",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_riskMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_creditLimit",
        type: "uint32",
      },
    ],
    name: "updateModelParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userRequests",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d336200007a565b6000805460ff60a01b191690556001805561015e600c8190556200004190620000ca565b600555620000506064620000ca565b60065562000060612710620000ca565b6007556008805460ff191660011790554260095562000193565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620000d9826004620000df565b92915050565b604051631ce2e8d760e31b8152600481018390527fff0000000000000000000000000000000000000000000000000000000000000060f883901b166024820152600090605d9063e71746b890604401602060405180830381865afa1580156200014c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000172919062000179565b9392505050565b6000602082840312156200018c57600080fd5b5051919050565b6114e480620001a36000396000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063c1f58bfc1161006f578063c1f58bfc14610467578063c8284e6d14610487578063cbca31ac146104d4578063dfe6b5d6146104fe578063f2fde38b1461052f578063fdc21a0c1461054f57600080fd5b80638da5cb5b146103105780639d86698514610338578063a22420cd146103f1578063ad08a08314610411578063b337cf7414610431578063c16de8691461045157600080fd5b80635c975abb116101085780635c975abb146102655780635de173df14610290578063715018a6146102b05780638456cb59146102c557806388ef6a6e146102da5780638aea61dc146102fa57600080fd5b806308f438f71461015b5780631510bff214610184578063263cb6b6146101a657806339a4c803146101c65780633ae1ca8c146102235780633f4ba83a1461025057600080fd5b3661015657005b600080fd5b34801561016757600080fd5b50610171600b5481565b6040519081526020015b60405180910390f35b34801561019057600080fd5b506101a461019f36600461126f565b61056f565b005b3480156101b257600080fd5b506101716101c13660046112c9565b610735565b3480156101d257600080fd5b506101e66101e13660046112f3565b610766565b604080516001600160a01b0390971687526020870195909552921515938501939093526060840152608083019190915260a082015260c00161017b565b34801561022f57600080fd5b5061024361023e36600461130c565b6107f1565b60405161017b9190611327565b34801561025c57600080fd5b506101a461085d565b34801561027157600080fd5b50600054600160a01b900460ff165b604051901515815260200161017b565b34801561029c57600080fd5b506101716102ab3660046112f3565b61086f565b3480156102bc57600080fd5b506101a461091d565b3480156102d157600080fd5b506101a461092f565b3480156102e657600080fd5b506101a46102f536600461136b565b61093f565b34801561030657600080fd5b50610171600a5481565b34801561031c57600080fd5b506000546040516001600160a01b03909116815260200161017b565b34801561034457600080fd5b506103a76103533660046112f3565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460068601546007909601546001600160a01b039586169796949560ff9094169492939192911688565b604080516001600160a01b03998a16815260208101989098528701959095529215156060860152608085019190915260a084015260c083015290911660e08201526101000161017b565b3480156103fd57600080fd5b5061028061040c3660046112f3565b610c0d565b34801561041d57600080fd5b5061017161042c3660046112c9565b610c49565b34801561043d57600080fd5b5061024361044c36600461130c565b610c65565b34801561045d57600080fd5b50610171600c5481565b34801561047357600080fd5b506101a46104823660046113a4565b610ccf565b34801561049357600080fd5b5060055460065460075460085460095460ff909116905b6040805195865260208601949094529284019190915215156060830152608082015260a00161017b565b3480156104e057600080fd5b506005546006546007546008546009546104aa9493929160ff169085565b34801561050a57600080fd5b50600a54600b54600c546040805193845260208401929092529082015260600161017b565b34801561053b57600080fd5b506101a461054a36600461130c565b610ee7565b34801561055b57600080fd5b506101a461056a366004611420565b610f60565b610577610f7f565b60008363ffffffff16116105d25760405162461bcd60e51b815260206004820152601b60248201527f426173652073636f7265206d75737420626520706f736974697665000000000060448201526064015b60405180910390fd5b60008263ffffffff16116106285760405162461bcd60e51b815260206004820181905260248201527f5269736b206d756c7469706c696572206d75737420626520706f73697469766560448201526064016105c9565b60008163ffffffff161161067e5760405162461bcd60e51b815260206004820152601d60248201527f437265646974206c696d6974206d75737420626520706f73697469766500000060448201526064016105c9565b61068d8363ffffffff16610fd9565b60055561069f63ffffffff8316610fd9565b6006556106b163ffffffff8216610fd9565b60075542600981905563ffffffff8416600c556040519081527ff3ad76dc2def13387cdaa20660cedfa8ce58bd013b7f39fd4b48d718aa3184a69060200160405180910390a160405163ffffffff841681527f967488f2edd75466f58e6c71b66aefc81b7b216a0a3ad64a3a3708714769d1f99060200160405180910390a1505050565b6003602052816000526040600020818154811061075157600080fd5b90600052602060002001600091509150505481565b6000818152600260205260408120548190819081908190819087906001600160a01b03166107a65760405162461bcd60e51b81526004016105c990611442565b505050600094855250506002602081905260409093208054938101546003820154600483015460058401546006909401546001600160a01b0390971697929660ff9092169550935090565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561085157602002820191906000526020600020905b81548152602001906001019080831161083d575b50505050509050919050565b610865610f7f565b61086d610fec565b565b60008181526002602052604081205482906001600160a01b03166108a55760405162461bcd60e51b81526004016105c990611442565b60008381526002602052604090206003015460ff166109065760405162461bcd60e51b815260206004820152601960248201527f436f6d7075746174696f6e206e6f7420636f6d706c657465640000000000000060448201526064016105c9565b505060009081526002602052604090206004015490565b610925610f7f565b61086d6000611041565b610937610f7f565b61086d611091565b6109476110d4565b61094f611121565b60085460ff166109975760405162461bcd60e51b81526020600482015260136024820152724d6f64656c206973206e6f742061637469766560681b60448201526064016105c9565b6001600160a01b0384166109e45760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b60448201526064016105c9565b82610a015760405162461bcd60e51b81526004016105c990611442565b81610a425760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840c8c2e8c240d0c2e6d607b1b60448201526064016105c9565b428111610a915760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642076616c696469747920706572696f6400000000000000000060448201526064016105c9565b6000838152600260205260409020546001600160a01b031615610af65760405162461bcd60e51b815260206004820152601960248201527f5265717565737420494420616c7265616479206578697374730000000000000060448201526064016105c9565b6000838152600260208190526040822080546001600160a01b0388166001600160a01b031991821617825560018201879055429282019290925560038101805460ff191690556005810185905560068101849055600781018054909216331790915590610b6290610fd9565b6004808301919091556001600160a01b03861660009081526003602090815260408083208054600181810183559185528385200189905533845293825282208054938401815582528120909101859055600a805491610bc08361146e565b909155505060405133906001600160a01b0387169086907f828c85c37dcaf6553b252a55b553cfed869f43eecae8b5c280784607b40f93b790600090a450610c0760018055565b50505050565b6000818152600260205260408120546001600160a01b0316610c3157506000919050565b50600090815260026020526040902060060154421090565b6004602052816000526040600020818154811061075157600080fd5b6001600160a01b038116600090815260036020908152604091829020805483518184028101840190945280845260609392830182828015610851576020028201919060005260206000209081548152602001906001019080831161083d5750505050509050919050565b610cd7610f7f565b60008381526002602052604090205483906001600160a01b0316610d0d5760405162461bcd60e51b81526004016105c990611442565b60085460ff16610d555760405162461bcd60e51b81526020600482015260136024820152724d6f64656c206973206e6f742061637469766560681b60448201526064016105c9565b60008481526002602052604090206003015460ff1615610db75760405162461bcd60e51b815260206004820152601d60248201527f436f6d7075746174696f6e20616c726561647920636f6d706c6574656400000060448201526064016105c9565b6000848152600260205260409020600601544210610e095760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016105c9565b81610e565760405162461bcd60e51b815260206004820152601e60248201527f456e6372797074656420646174612063616e6e6f7420626520656d707479000060448201526064016105c9565b600084815260026020526040812090610e6f858561117a565b6004830181905560038301805460ff19166001179055600b80549192506000610e978361146e565b909155505081546040518281526001600160a01b039091169087907fc25a10f06fc2baeeacfc621b6b6ef4fa854b170550978b1cd663fd811b6dc9f19060200160405180910390a3505050505050565b610eef610f7f565b6001600160a01b038116610f545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105c9565b610f5d81611041565b50565b610f68610f7f565b6008805460ff191691151591909117905542600955565b6000546001600160a01b0316331461086d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c9565b6000610fe682600461118e565b92915050565b610ff4611206565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110996110d4565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110243390565b600054600160a01b900460ff161561086d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105c9565b6002600154036111735760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105c9565b6002600155565b6000611187600c54610fd9565b9392505050565b604051631ce2e8d760e31b8152600481018390526001600160f81b031960f883901b166024820152600090605d9063e71746b890604401602060405180830381865afa1580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111879190611495565b600054600160a01b900460ff1661086d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105c9565b803563ffffffff8116811461126a57600080fd5b919050565b60008060006060848603121561128457600080fd5b61128d84611256565b925061129b60208501611256565b91506112a960408501611256565b90509250925092565b80356001600160a01b038116811461126a57600080fd5b600080604083850312156112dc57600080fd5b6112e5836112b2565b946020939093013593505050565b60006020828403121561130557600080fd5b5035919050565b60006020828403121561131e57600080fd5b611187826112b2565b6020808252825182820181905260009190848201906040850190845b8181101561135f57835183529284019291840191600101611343565b50909695505050505050565b6000806000806080858703121561138157600080fd5b61138a856112b2565b966020860135965060408601359560600135945092505050565b6000806000604084860312156113b957600080fd5b83359250602084013567ffffffffffffffff808211156113d857600080fd5b818601915086601f8301126113ec57600080fd5b8135818111156113fb57600080fd5b87602082850101111561140d57600080fd5b6020830194508093505050509250925092565b60006020828403121561143257600080fd5b8135801515811461118757600080fd5b602080825260129082015271125b9d985b1a59081c995c5d595cdd08125160721b604082015260600190565b60006001820161148e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156114a757600080fd5b505191905056fea2646970667358221220981b6b2cd37da1387d8d727da33c0235a0001614a753bacf9a712794e302732164736f6c63430008140033";

type CreditScoreModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreditScoreModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreditScoreModel__factory extends ContractFactory {
  constructor(...args: CreditScoreModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreditScoreModel> {
    return super.deploy(overrides || {}) as Promise<CreditScoreModel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CreditScoreModel {
    return super.attach(address) as CreditScoreModel;
  }
  override connect(signer: Signer): CreditScoreModel__factory {
    return super.connect(signer) as CreditScoreModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreditScoreModelInterface {
    return new utils.Interface(_abi) as CreditScoreModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreditScoreModel {
    return new Contract(address, _abi, signerOrProvider) as CreditScoreModel;
  }
}
